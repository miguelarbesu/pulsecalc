{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pulsecalc A CLI for calculating RF pulse powers in NMR. License This project is licensed under the MIT license. Copyright 2022, Miguel Arbes\u00fa Acknowledgements Project based on the Reproducible Science Cookiecutter .","title":"pulsecalc"},{"location":"#pulsecalc","text":"A CLI for calculating RF pulse powers in NMR.","title":"pulsecalc"},{"location":"#license","text":"This project is licensed under the MIT license. Copyright 2022, Miguel Arbes\u00fa","title":"License"},{"location":"#acknowledgements","text":"Project based on the Reproducible Science Cookiecutter .","title":"Acknowledgements"},{"location":"authors/","text":"Authors List of contributors Miguel Arbes\u00fa - miguelarbesu@gmail.com Want to contribute? Visit the repositiory on Github or drop me an email.","title":"Authors"},{"location":"authors/#authors","text":"","title":"Authors"},{"location":"authors/#list-of-contributors","text":"Miguel Arbes\u00fa - miguelarbesu@gmail.com","title":"List of contributors"},{"location":"authors/#want-to-contribute","text":"Visit the repositiory on Github or drop me an email.","title":"Want to contribute?"},{"location":"changelog/","text":"Changelog 0.5.0 (2022-05-05) Feat add frequency calculation 0.4.1 (2022-04-28) Fix all commands check if reference table exists 0.4.0 (2022-04-27) Feat add HH table 0.3.0 (2022-03-30) Feat add reference table 0.2.0 (2022-03-25) Feat cli interface for reference pulse setting 0.1.1 (2022-03-25) Refactor initial commit after cookiecutter 0.1.0 (2022-03-21) First release.","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#050-2022-05-05","text":"","title":"0.5.0 (2022-05-05)"},{"location":"changelog/#feat","text":"add frequency calculation","title":"Feat"},{"location":"changelog/#041-2022-04-28","text":"","title":"0.4.1 (2022-04-28)"},{"location":"changelog/#fix","text":"all commands check if reference table exists","title":"Fix"},{"location":"changelog/#040-2022-04-27","text":"","title":"0.4.0 (2022-04-27)"},{"location":"changelog/#feat_1","text":"add HH table","title":"Feat"},{"location":"changelog/#030-2022-03-30","text":"","title":"0.3.0 (2022-03-30)"},{"location":"changelog/#feat_2","text":"add reference table","title":"Feat"},{"location":"changelog/#020-2022-03-25","text":"","title":"0.2.0 (2022-03-25)"},{"location":"changelog/#feat_3","text":"cli interface for reference pulse setting","title":"Feat"},{"location":"changelog/#011-2022-03-25","text":"","title":"0.1.1 (2022-03-25)"},{"location":"changelog/#refactor","text":"initial commit after cookiecutter","title":"Refactor"},{"location":"changelog/#010-2022-03-21","text":"","title":"0.1.0 (2022-03-21)"},{"location":"changelog/#first-release","text":"","title":"First release."},{"location":"pulsecalc-doc/","text":"Code reference The core module of the pulsecalc package. calculate_frequency_from_length ( pulse_length ) Calculate the frequency of a pulse in kHz from its length in \u03bcs Parameters: Name Type Description Default pulse_length float Pulse length in \u03bcs required Returns: Type Description pulse_frequency Pulse frequency in kHz Source code in pulsecalc/core.py def calculate_frequency_from_length ( pulse_length ): \"\"\"Calculate the frequency of a pulse in kHz from its length in \u03bcs Args: pulse_length (float): Pulse length in \u03bcs Returns: pulse_frequency: Pulse frequency in kHz \"\"\" pulse_frequency = 1e3 / ( pulse_length * 4 ) return pulse_frequency calculate_frequency_from_power ( reference_frequency , reference_power , new_power ) Calculate the frequency of a pulse in kHz from its power and the reference frequency and power Parameters: Name Type Description Default reference_frequency float Reference frequency in kHz required reference_power float Reference power in W required new_power float New power in W required Returns: Type Description new_frequency (float) New frequency in kHz Source code in pulsecalc/core.py def calculate_frequency_from_power ( reference_frequency , reference_power , new_power ): \"\"\"Calculate the frequency of a pulse in kHz from its power and the reference frequency and power Args: reference_frequency (float): Reference frequency in kHz reference_power (float): Reference power in W new_power (float): New power in W Returns: new_frequency (float): New frequency in kHz \"\"\" reference_length = calculate_length_from_frequency ( reference_frequency ) reference_attenuation = - 10 * np . log10 ( reference_power ) new_attenuation = - 10 * np . log10 ( new_power ) new_length = reference_length * 10 ** ( ( new_attenuation - reference_attenuation ) / 20 ) new_frequency = calculate_frequency_from_length ( new_length ) return new_frequency calculate_length_from_frequency ( pulse_frequency ) Calculate the length of a pulse in \u03bcs from its frequency in kHz Parameters: Name Type Description Default pulse_frequency float Pulse frequency in kHz required Returns: Type Description pulse_length Pulse length in \u03bcs Source code in pulsecalc/core.py def calculate_length_from_frequency ( pulse_frequency ): \"\"\"Calculate the length of a pulse in \u03bcs from its frequency in kHz Args: pulse_frequency (float): Pulse frequency in kHz Returns: pulse_length: Pulse length in \u03bcs \"\"\" pulse_length = 1e3 / ( pulse_frequency * 4 ) return pulse_length calculate_power_from_frequency ( reference_frequency , reference_power , new_frequency ) Calculate the power of a pulse in W from its frequency and the reference frequency and power Parameters: Name Type Description Default reference_frequency float Reference frequency in kHz required reference_power float Reference power in W required new_frequency float New frequency in kHz required Returns: Type Description new_power (float) New power in W Source code in pulsecalc/core.py def calculate_power_from_frequency ( reference_frequency , reference_power , new_frequency ): \"\"\"Calculate the power of a pulse in W from its frequency and the reference frequency and power Args: reference_frequency (float): Reference frequency in kHz reference_power (float): Reference power in W new_frequency (float): New frequency in kHz Returns: new_power (float): New power in W \"\"\" reference_attenuation = - 10.0 * np . log10 ( reference_power ) reference_length = calculate_length_from_frequency ( reference_frequency ) new_length = calculate_length_from_frequency ( new_frequency ) new_attenuation = reference_attenuation - 20.0 * np . log10 ( reference_length / new_length ) new_power = 10.0 ** ( - new_attenuation / 10.0 ) return new_power create_reference_table () Create the reference pulse table. By default, the table is created in the current directory. Source code in pulsecalc/core.py def create_reference_table (): \"\"\"Create the reference pulse table. By default, the table is created in the current directory. \"\"\" reference_table = Path . cwd () / \"reference_pulses.csv\" if reference_table . is_file (): click . confirm ( \"The reference pulse table already exists. Do you want to overwrite it?\" , abort = True , ) reference_table . unlink () reference_table . write_text ( \"Channel \\t Length (\u03bcs) \\t Power (W) \\t Frequency (kHz) \\n \" ) return get_reference_pulse ( channel ) Get a reference pulse definition Parameters: Name Type Description Default channel str Channel name. Must be one of the following: 1H, 13C, 15N. required Returns: Type Description pulse_length (float) Pulse length in \u03bcs pulse_power (float): Pulse power in W pulse_frequency (float): Pulse frequency in kHz Source code in pulsecalc/core.py def get_reference_pulse ( channel ): \"\"\"Get a reference pulse definition Args: channel (str): Channel name. Must be one of the following: 1H, 13C, 15N. Returns: pulse_length (float): Pulse length in \u03bcs pulse_power (float): Pulse power in W pulse_frequency (float): Pulse frequency in kHz \"\"\" # read the table reference_table = get_reference_table () if not reference_table . is_file (): click . echo ( \"The reference pulse table does not exist\" ) return with reference_table . open () as f : lines = f . readlines () for line in lines : if line . startswith ( channel ): channel , pulse_length , pulse_power , pulse_frequency = line . split ( \" \\t \" ) # make all float pulse_length = float ( pulse_length ) pulse_power = float ( pulse_power ) pulse_frequency = float ( pulse_frequency ) return pulse_length , pulse_power , pulse_frequency get_reference_table () Get the reference pulse table Returns: Type Description reference_table (list) List of reference pulse definitions Source code in pulsecalc/core.py def get_reference_table (): \"\"\"Get the reference pulse table Returns: reference_table (list): List of reference pulse definitions \"\"\" reference_table = Path . cwd () / \"reference_pulses.csv\" if not reference_table . is_file (): click . echo ( \"The reference pulse table does not exist. \\n Please run pulsecalc init to create it.\" ) raise FileNotFoundError else : return reference_table reset_reference_table () Reset the reference pulse table Source code in pulsecalc/core.py def reset_reference_table (): \"\"\"Reset the reference pulse table\"\"\" reference_table = get_reference_table () if not reference_table . is_file (): click . echo ( \"The reference pulse table does not exist\" ) return click . confirm ( \"Are you sure you want to reset the reference pulse table?\" , abort = True ) reference_table . unlink () click . echo ( \"Reference pulse table has been reset\" ) return set_reference_pulse ( channel , pulse_length , pulse_power , pulse_frequency ) Set a reference pulse definition Parameters: Name Type Description Default channel str Channel name. Must be one of the following: 1H, 13C, 15N. required pulse_length float Pulse length in \u03bcs required pulse_power float Pulse power in W required pulse_frequency float Pulse frequency in kHz required Source code in pulsecalc/core.py def set_reference_pulse ( channel , pulse_length , pulse_power , pulse_frequency ): \"\"\"Set a reference pulse definition Args: channel (str): Channel name. Must be one of the following: 1H, 13C, 15N. pulse_length (float): Pulse length in \u03bcs pulse_power (float): Pulse power in W pulse_frequency (float): Pulse frequency in kHz \"\"\" # read the table reference_table = get_reference_table () # update the line for the given channel new_line = ( f \" { channel } \\t { pulse_length : .2f } \\t { pulse_power : .2f } \\t { pulse_frequency : .2f } \\n \" ) with reference_table . open ( \"r+\" ) as f : lines = f . readlines () for i , line in enumerate ( lines ): if line . startswith ( channel ): lines [ i ] = new_line break else : lines . append ( new_line ) f . seek ( 0 ) f . writelines ( lines ) return","title":"Code reference"},{"location":"pulsecalc-doc/#code-reference","text":"The core module of the pulsecalc package.","title":"Code reference"},{"location":"pulsecalc-doc/#src.pulsecalc.core.calculate_frequency_from_length","text":"Calculate the frequency of a pulse in kHz from its length in \u03bcs Parameters: Name Type Description Default pulse_length float Pulse length in \u03bcs required Returns: Type Description pulse_frequency Pulse frequency in kHz Source code in pulsecalc/core.py def calculate_frequency_from_length ( pulse_length ): \"\"\"Calculate the frequency of a pulse in kHz from its length in \u03bcs Args: pulse_length (float): Pulse length in \u03bcs Returns: pulse_frequency: Pulse frequency in kHz \"\"\" pulse_frequency = 1e3 / ( pulse_length * 4 ) return pulse_frequency","title":"calculate_frequency_from_length()"},{"location":"pulsecalc-doc/#src.pulsecalc.core.calculate_frequency_from_power","text":"Calculate the frequency of a pulse in kHz from its power and the reference frequency and power Parameters: Name Type Description Default reference_frequency float Reference frequency in kHz required reference_power float Reference power in W required new_power float New power in W required Returns: Type Description new_frequency (float) New frequency in kHz Source code in pulsecalc/core.py def calculate_frequency_from_power ( reference_frequency , reference_power , new_power ): \"\"\"Calculate the frequency of a pulse in kHz from its power and the reference frequency and power Args: reference_frequency (float): Reference frequency in kHz reference_power (float): Reference power in W new_power (float): New power in W Returns: new_frequency (float): New frequency in kHz \"\"\" reference_length = calculate_length_from_frequency ( reference_frequency ) reference_attenuation = - 10 * np . log10 ( reference_power ) new_attenuation = - 10 * np . log10 ( new_power ) new_length = reference_length * 10 ** ( ( new_attenuation - reference_attenuation ) / 20 ) new_frequency = calculate_frequency_from_length ( new_length ) return new_frequency","title":"calculate_frequency_from_power()"},{"location":"pulsecalc-doc/#src.pulsecalc.core.calculate_length_from_frequency","text":"Calculate the length of a pulse in \u03bcs from its frequency in kHz Parameters: Name Type Description Default pulse_frequency float Pulse frequency in kHz required Returns: Type Description pulse_length Pulse length in \u03bcs Source code in pulsecalc/core.py def calculate_length_from_frequency ( pulse_frequency ): \"\"\"Calculate the length of a pulse in \u03bcs from its frequency in kHz Args: pulse_frequency (float): Pulse frequency in kHz Returns: pulse_length: Pulse length in \u03bcs \"\"\" pulse_length = 1e3 / ( pulse_frequency * 4 ) return pulse_length","title":"calculate_length_from_frequency()"},{"location":"pulsecalc-doc/#src.pulsecalc.core.calculate_power_from_frequency","text":"Calculate the power of a pulse in W from its frequency and the reference frequency and power Parameters: Name Type Description Default reference_frequency float Reference frequency in kHz required reference_power float Reference power in W required new_frequency float New frequency in kHz required Returns: Type Description new_power (float) New power in W Source code in pulsecalc/core.py def calculate_power_from_frequency ( reference_frequency , reference_power , new_frequency ): \"\"\"Calculate the power of a pulse in W from its frequency and the reference frequency and power Args: reference_frequency (float): Reference frequency in kHz reference_power (float): Reference power in W new_frequency (float): New frequency in kHz Returns: new_power (float): New power in W \"\"\" reference_attenuation = - 10.0 * np . log10 ( reference_power ) reference_length = calculate_length_from_frequency ( reference_frequency ) new_length = calculate_length_from_frequency ( new_frequency ) new_attenuation = reference_attenuation - 20.0 * np . log10 ( reference_length / new_length ) new_power = 10.0 ** ( - new_attenuation / 10.0 ) return new_power","title":"calculate_power_from_frequency()"},{"location":"pulsecalc-doc/#src.pulsecalc.core.create_reference_table","text":"Create the reference pulse table. By default, the table is created in the current directory. Source code in pulsecalc/core.py def create_reference_table (): \"\"\"Create the reference pulse table. By default, the table is created in the current directory. \"\"\" reference_table = Path . cwd () / \"reference_pulses.csv\" if reference_table . is_file (): click . confirm ( \"The reference pulse table already exists. Do you want to overwrite it?\" , abort = True , ) reference_table . unlink () reference_table . write_text ( \"Channel \\t Length (\u03bcs) \\t Power (W) \\t Frequency (kHz) \\n \" ) return","title":"create_reference_table()"},{"location":"pulsecalc-doc/#src.pulsecalc.core.get_reference_pulse","text":"Get a reference pulse definition Parameters: Name Type Description Default channel str Channel name. Must be one of the following: 1H, 13C, 15N. required Returns: Type Description pulse_length (float) Pulse length in \u03bcs pulse_power (float): Pulse power in W pulse_frequency (float): Pulse frequency in kHz Source code in pulsecalc/core.py def get_reference_pulse ( channel ): \"\"\"Get a reference pulse definition Args: channel (str): Channel name. Must be one of the following: 1H, 13C, 15N. Returns: pulse_length (float): Pulse length in \u03bcs pulse_power (float): Pulse power in W pulse_frequency (float): Pulse frequency in kHz \"\"\" # read the table reference_table = get_reference_table () if not reference_table . is_file (): click . echo ( \"The reference pulse table does not exist\" ) return with reference_table . open () as f : lines = f . readlines () for line in lines : if line . startswith ( channel ): channel , pulse_length , pulse_power , pulse_frequency = line . split ( \" \\t \" ) # make all float pulse_length = float ( pulse_length ) pulse_power = float ( pulse_power ) pulse_frequency = float ( pulse_frequency ) return pulse_length , pulse_power , pulse_frequency","title":"get_reference_pulse()"},{"location":"pulsecalc-doc/#src.pulsecalc.core.get_reference_table","text":"Get the reference pulse table Returns: Type Description reference_table (list) List of reference pulse definitions Source code in pulsecalc/core.py def get_reference_table (): \"\"\"Get the reference pulse table Returns: reference_table (list): List of reference pulse definitions \"\"\" reference_table = Path . cwd () / \"reference_pulses.csv\" if not reference_table . is_file (): click . echo ( \"The reference pulse table does not exist. \\n Please run pulsecalc init to create it.\" ) raise FileNotFoundError else : return reference_table","title":"get_reference_table()"},{"location":"pulsecalc-doc/#src.pulsecalc.core.reset_reference_table","text":"Reset the reference pulse table Source code in pulsecalc/core.py def reset_reference_table (): \"\"\"Reset the reference pulse table\"\"\" reference_table = get_reference_table () if not reference_table . is_file (): click . echo ( \"The reference pulse table does not exist\" ) return click . confirm ( \"Are you sure you want to reset the reference pulse table?\" , abort = True ) reference_table . unlink () click . echo ( \"Reference pulse table has been reset\" ) return","title":"reset_reference_table()"},{"location":"pulsecalc-doc/#src.pulsecalc.core.set_reference_pulse","text":"Set a reference pulse definition Parameters: Name Type Description Default channel str Channel name. Must be one of the following: 1H, 13C, 15N. required pulse_length float Pulse length in \u03bcs required pulse_power float Pulse power in W required pulse_frequency float Pulse frequency in kHz required Source code in pulsecalc/core.py def set_reference_pulse ( channel , pulse_length , pulse_power , pulse_frequency ): \"\"\"Set a reference pulse definition Args: channel (str): Channel name. Must be one of the following: 1H, 13C, 15N. pulse_length (float): Pulse length in \u03bcs pulse_power (float): Pulse power in W pulse_frequency (float): Pulse frequency in kHz \"\"\" # read the table reference_table = get_reference_table () # update the line for the given channel new_line = ( f \" { channel } \\t { pulse_length : .2f } \\t { pulse_power : .2f } \\t { pulse_frequency : .2f } \\n \" ) with reference_table . open ( \"r+\" ) as f : lines = f . readlines () for i , line in enumerate ( lines ): if line . startswith ( channel ): lines [ i ] = new_line break else : lines . append ( new_line ) f . seek ( 0 ) f . writelines ( lines ) return","title":"set_reference_pulse()"}]}